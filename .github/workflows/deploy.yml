name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        required: true

env:
  DOCKER_REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app
  VM_IP: ${{ secrets.REMOTE_HOST }}
  SSH_USER: ${{ secrets.REMOTE_USER }}

jobs:
  deploy:
    name: Deploy Docker image to VM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Docker login (for verify)
        env:
          YC_SA_KEY: ${{ secrets.YC_SA_KEY }}
        run: |
          echo "$YC_SA_KEY" | docker login --username json_key --password-stdin cr.yandex

      - name: Verify image exists in registry
        run: |
          docker manifest inspect $DOCKER_REGISTRY:${{ github.event.inputs.release_version }}_latest || {
            echo "::error::Image $DOCKER_REGISTRY:${{ github.event.inputs.release_version }}_latest not found"
            exit 1
          }

      - name: Deploy to VM
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo '${{ secrets.YC_SA_KEY }}' | docker login --username json_key --password-stdin cr.yandex

            docker stop app || true
            docker rm app || true

            docker pull $DOCKER_REGISTRY:${{ github.event.inputs.release_version }}_latest

            docker run -d \
              --name app \
              -p 80:3000 \
              $DOCKER_REGISTRY:${{ github.event.inputs.release_version }}_latest

      - name: Update GitHub issue with deployment status
        if: github.event.repository.has_issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUMBER=$(gh issue list --search "Release v${{ github.event.inputs.release_version }}" --json number -q '.[0].number')

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "‚ùó Issue for release not found ‚Äî skipping comment"
            exit 0
          fi

          gh issue comment "$ISSUE_NUMBER" --body "**üöÄ –†–µ–ª–∏–∑ –∑–∞–¥–µ–ø–ª–æ–µ–Ω**  
          **–í–µ—Ä—Å–∏—è:** v${{ github.event.inputs.release_version }}
          **–î–∞—Ç–∞:** $(date '+%Y-%m-%d %H:%M')
          **Docker Image:** $DOCKER_REGISTRY:${{ github.event.inputs.release_version }}_latest
          **–°–µ—Ä–≤–µ—Ä:** http://${{ secrets.REMOTE_HOST }}:80"
