name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        required: true

env:
  DOCKER_REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app

jobs:
  fix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: |
          npm ci
          npm run lint
          npm test

      - name: Build and push fix images
        id: build
        run: |
          FIX=${{ github.run_number }}
          BASE=${{ github.event.inputs.release_version }}
          IMAGE_FIX=$DOCKER_REGISTRY:${BASE}_fix${FIX}
          IMAGE_LATEST=$DOCKER_REGISTRY:${BASE}_latest
          docker build -t $IMAGE_FIX .
          docker tag $IMAGE_FIX $IMAGE_LATEST
          echo "$YC_SA_KEY" | docker login --username json_key --password-stdin cr.yandex
          docker push $IMAGE_FIX
          docker push $IMAGE_LATEST
          echo "FIX_IMAGE=$IMAGE_FIX" >> $GITHUB_OUTPUT
      - run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag v${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          git push origin v${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
      - uses: actions/github-script@v6
        env:
          BASE: ${{ github.event.inputs.release_version }}
          FIX_IMAGE: ${{ steps.build.outputs.FIX_IMAGE }}
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({ owner: context.repo.owner, repo: context.repo.repo, state: 'open' });
            const issue = issues.data.find(i => i.title === `Release v${process.env.BASE}`);
            if (!issue) return;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: `**Fix выпущен:** ${new Date().toISOString()}
            **Docker:** ${process.env.FIX_IMAGE}`
            });